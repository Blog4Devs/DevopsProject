name: Build and Package Backend app
on:
  push:
    branches:
      - main
    paths:
      - "spring-boot-data-jpa-mysql-master/**"
      - ".github/workflows/backend-workflow.yml"
      - "!README.md"
      - "!spring-boot-data-jpa-mysql-master/README.md"

jobs:
  maven-build:
    if: "contains(github.event.head_commit.message,'run workflow')"
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.2.0
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - name: Build maven app
        uses: ./actions/maven-build-action
        with:
          directory: spring-boot-data-jpa-mysql-master
      - name: Archive JAR file
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: spring-boot-data-jpa-mysql-master/target/*.jar

  docker-build:
    runs-on: ubuntu-latest
    needs: maven-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: app
          path: spring-boot-data-jpa-mysql-master/target
      - name: Extract image version
        uses: ./actions/image-version-action
      - name: Build Docker image
        run: cd spring-boot-data-jpa-mysql-master && docker build -t elmazidi/myapp-backend:${{ env.version }} .
      - name: Log in to Docker Hub
        run: docker login -u elmazidi -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push backend Docker image
        run: docker push elmazidi/myapp-backend:${{ env.version }}
  gitops-k8s-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Clone the Git repository containing the K8s cluster's configuration files.
        run: git clone https://github.com/ELMILYASS/K8sClusterDevopsProject.git
      - name: Update deployment version
        run: cd K8sClusterDevopsProject/dev && sed -i "s/myapp-backend:.*/myapp-backend:test/g" backend-app.yaml

      - name: Display updated deployment file
        run: cd K8sClusterDevopsProject/dev &&  cat backend-app.yaml

      - name: Commit changes
        run: |
          git add .
          git commit -m "backend version test"

      - name: Set Git remote URL
        run: git remote set-url origin https://ELMILYASS:${{ secrets.GITHUBPASSWORD }}@/github.com/ELMILYASS/K8sClusterDevopsProject.git

      - name: Push changes to GitLab
        run: git push -uf origin main
