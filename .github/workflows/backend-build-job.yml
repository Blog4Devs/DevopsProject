name: Build and Deploy Backend app

on:
  push:
    branches:
      - main

jobs:
  maven-build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.2.0
        env:
          MYSQL_ROOT_PASSWORD: 123456
        ports:
          - 3308:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: cd spring-boot-data-jpa-mysql && mvn -B package
    - name: Archive JAR file
      uses: actions/upload-artifact@v3
      with:
        name: app
        path: spring-boot-data-jpa-mysql/target/*.jar
        
  docker-build:
      runs-on: ubuntu-latest
      needs: maven-build
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: app
          path: spring-boot-data-jpa-mysql/target  
      - name: Build Docker image
        run: cd spring-boot-data-jpa-mysql && docker build -f "DockerFile" -t elmazidi/myapp-backend:latest .
      - name: Log in to Docker Hub
        run:  docker login -u elmazidi -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push backend Docker image
        run: docker push elmazidi/myapp-backend:latest
  deploy:
      runs-on: ubuntu-latest
      needs: docker-build
      steps:
       - name: Running MySQL container
         run: docker run -p 3308:3306 -d --name mysql-container -e MYSQL_ROOT_PASSWORD=password mysql:8.0.2 
       - name: Wait for MySQL to be ready
         run: |
          until docker exec -i mysql-container mysqladmin -uroot -ppassword ping --silent; do
            echo 'Waiting for MySQL to be ready...'
            sleep 5
          done
       - name: Running backend container
         run: docker run -p 8080:8080 --name myapp-backend-container  elmazidi/myapp-backend:latest
         
       - name: Send a get request to the backend application
         run: curl http://localhost:8080/api/tutorials
   
